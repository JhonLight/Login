{
    "pipes": [],
    "interfaces": [
        {
            "name": "clouds",
            "id": "interface-clouds-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "all",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "main",
            "id": "interface-main-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "feelsLike",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "humidity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "pressure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "temp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "tempMax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tempMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "sys",
            "id": "interface-sys-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "sunrise",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "sunset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Tempo",
            "id": "interface-Tempo-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "base",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "clouds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "clouds",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "cod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "dt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "hora",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "main",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "sys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "sys",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "timezone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "visibility",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "weather",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "weather[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "wind",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "wind",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-ac102cb55de512e136e087fdcc1e7934ea1d2c907eeda713e0c97bb3e13ba2dbf91cb590fec7e90a6d1155bdb56cea9af691b1a6e6d1fb064e7ec819d26738c4-1",
            "file": "src/app/shared/services/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  email: string\n  senha: string\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "senha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        },
        {
            "name": "weather",
            "id": "interface-weather-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "weatherDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "wind",
            "id": "interface-wind-36a38a363ba758b3a84868c84c383e7ebedd9eb33b9b200686301c88521f41e99ec31be222797b800192086d5cf89e1d04c8b72c3fa191560c5c62f23944f5ea",
            "file": "src/app/interfaces/tempo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tempo {\r\n\r\n     weather: weather[],\r\n     base: string,\r\n     main: main,\r\n     visibility: number,\r\n     wind: wind,\r\n     clouds: clouds,\r\n     dt: number,\r\n     sys: sys,\r\n     timezone: number,\r\n     id: number,\r\n     name: string,\r\n     cod: number,\r\n     hora: number,\r\n\r\n}\r\n\r\n// MARK: - Clouds\r\nexport interface clouds  {\r\n    all: number\r\n}\r\n\r\n\r\n// MARK: - Main\r\nexport interface main {\r\n    temp: number,\r\n    feelsLike: number,\r\n    tempMin: number,\r\n    tempMax: number,\r\n    pressure: number,\r\n    humidity: number\r\n\r\n\r\n}\r\n\r\n// MARK: - Sys\r\nexport interface sys {\r\n    type: number,\r\n    id: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number,\r\n}\r\n\r\n// MARK: - Weather\r\nexport interface weather {\r\n    id: number,\r\n    main: string,\r\n    weatherDescription: string,\r\n     icon: string\r\n\r\n\r\n}\r\n\r\n// MARK: - Wind\r\nexport interface wind {\r\n    speed: number,\r\n    deg: number,\r\n}\r\n",
            "properties": [
                {
                    "name": "deg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "speed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-7f2f35b107bc1e7d8918a9c2437f757ddd76af087d87a2de990cf1606f432699d0f05493cf1bb6e5b764201a5f35f0a432a3ed1c88ae9d4ea5e1f00b10dcf7b8",
            "file": "src/app/shared/services/auth.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "ClimaService",
            "id": "injectable-ClimaService-1dc98c71472104591cd99b67b38ab805ca58a55e8790db4aca8365d2ea1e005beb381d9040a808a2c57a89e60432410cf0e7b0af06cee65f73db9669a5558d06",
            "file": "src/app/services/clima.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getClima",
                    "args": [
                        {
                            "name": "lat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lon",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Tempo } from '../interfaces/tempo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClimaService {\n\n  constructor( private http: HttpClient) { }\n\n  getClima(lat: string, lon: string){\n    lat = '-25.455132'\n    lon = '-49.179905'\n    return this.http.get<Tempo>('https://api.openweathermap.org/data/2.5/weather?lat=' + lat +'&lon=' + lon +'&appid=bedbc530fea943c32482d7bbe0edaada')\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-216456583e25428faed77a4328eb6552448b3ca5a60c594cca6093d48f5332766845debfe0c05c76cc89e95f1f958caf3ad9253a229c2cc3a570b8ec03f2b4c7",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5eb1edef5c65f69f78ddbd36ffd53dfe53460c8197068188f8608a82b15fd5d7f87b0dd54d6ee9111a429c3a309f4b7b23c801f3cf1f097ba38eff5cc81f6d11",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Login'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Login';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d37c3f19a6c33ce40728a3b4aba81d1ffabffc99da0cb7ed993464d4aaa272a593f3e1ffbd89ead4ea13b4f5fdbd8faf749df58fcb8b13f2f458960e236efd4f",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 632,
                            "end": 645,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 633,
                                "end": 641,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 31,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 45,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 47
                    }
                }
            }
        },
        {
            "name": "CadastroComponent",
            "id": "component-CadastroComponent-c82996d6ba288b1c44bde2b733f3ea4843801ae552f5665d988d63074e1458d22035852a26e9ca54b14418ce337a583b04f5186af7ba004fa4f0cc52483d72e5",
            "file": "src/app/cadastro/cadastro.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cadastro",
            "styleUrls": [
                "./cadastro.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./cadastro.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "confSenha",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "erro",
                    "defaultValue": "'X Senhas não conferem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "erroMenor",
                    "defaultValue": "'X Senha menor que seis caracteres'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "senha",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "senhaIgual",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "esconde",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validaSenhaIgual",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "voltar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n  senha: string = ''\n  confSenha: string = ''\n  senhaIgual: boolean = false\n  erro: string = 'X Senhas não conferem'\n  erroMenor: string = 'X Senha menor que seis caracteres'\n\n\n  constructor( private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  validaSenhaIgual(): void {\n    if (this.senha == this.confSenha ) {\n      this.router.navigate(['home'])\n\n    } else {\n\n      this.senha = ''\n      this.confSenha = ''\n      this.senhaIgual = true\n    }\n  }\n\n  /* validaSenhaTamanho (): void{\n    if (this.senha.length > 5 && this.confSenha.length > 5) {\n\n    } else {\n      this.senhaIgual = true\n    }\n  } */\n\n  esconde():void{\n    this.senhaIgual = false\n  }\n\n\n  voltar(){\n    this.router.navigate(['login'])\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@font-face {\r\n  font-family: mark;\r\n  src: url(../../assets/font/MarkPro-Regular.ttf);\r\n}\r\n\r\n.home {\r\n  font-family: mark;\r\n  height: 100vh;\r\n  display: flex;\r\n  color: #FFFFFF;\r\n  background: linear-gradient(180deg, #33383D 0%, #1C1D20 100%);\r\n}\r\n\r\nh1 {\r\n  font-weight: 400;\r\n  font-size: 7vh;\r\n}\r\n\r\n\r\n.inscreva {\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n}\r\n\r\n.form {\r\n  height: 75%;\r\n  width: 73%;\r\n\r\n}\r\n\r\nfieldset {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 9%;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  height: 8vh;\r\n  background: #26292C;\r\n  border: 1px solid #FFFFFF;\r\n  border-radius: 7vh;\r\n  margin-top: 3%;\r\n  padding-left: 10px;\r\n  color: #FFFFFF;\r\n  font-size: 1rem;\r\n}\r\n\r\n.uni {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n}\r\n\r\n.home-img {\r\n  width: 50%;\r\n  display: flex;\r\n}\r\n\r\n.img {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.logo {\r\n  width: 41vh;\r\n  height: 9.2vh;\r\n  position: absolute;\r\n  margin-top: 1.7vh;\r\n}\r\n\r\nbutton {\r\n  background: none;\r\n  font-family: mark;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n}\r\n\r\n#voltar {\r\n  border: none;\r\n}\r\n\r\n#voltar:hover {\r\n  color: #E9B425;\r\n\r\n}\r\n\r\n.btn-cadastro {\r\n  background: linear-gradient(90deg, #FF2D04 0%, #C13216 100%);\r\n  box-shadow: inset 0.7vh 0.7vh 2vh rgba(0, 0, 0, 0.15%);\r\n  border-radius: 7vh;\r\n  width: 100%;\r\n  height: 9vh;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 2.5vh;\r\n  line-height: 3.1vh;\r\n  border-color: #FF2D04;\r\n}\r\n\r\n.flex {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n}\r\n\r\n.erro {\r\n  color: #E9B425;\r\n  text-align: center;\r\n  padding-top: 2vh;\r\n}\r\n\r\n@media screen and (max-width: 912px) {\r\n  h1 {\r\n    font-size: 5vh;\r\n    margin-bottom: 5%;\r\n  }\r\n\r\n  .logo {\r\n    width: 24vh;\r\n  }\r\n\r\n  input {\r\n    height: 5vh;\r\n  }\r\n\r\n  .btn-cadastro {\r\n    height: 5vh;\r\n    font-size: 1.5vh;\r\n  }\r\n\r\n\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  fieldset {\r\n    padding: 0%;\r\n  }\r\n\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n\r\n  .home-img {\r\n    display: none;\r\n  }\r\n\r\n  .home {\r\n    justify-content: center;\r\n  }\r\n\r\n}\r\n\r\n@media screen and (max-width: 750px) {\r\n  .home-img {\r\n    display: none;\r\n  }\r\n\r\n  .inscreva {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 820px) {\r\n  h1 {\r\n    font-size: 6vh;\r\n  }\r\n\r\n  .logo {\r\n    width: 35vh;\r\n    height: 6.2vh;\r\n  }\r\n\r\n  .inscreva {\r\n    justify-content: space-around;\r\n  }\r\n}\r\n",
                    "styleUrl": "./cadastro.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\n  <div class=\"inscreva\">\n    <h1>Inscrever-se</h1>\n    <!--  <div>\n      <button class=\"btn-google\">Inscrever-se com o Google</button>\n    </div> -->\n    <div class=\"form\">\n      <fieldset>\n        <div class=\"uni\">\n          <label for=\"email\">E-mail *</label>\n          <input type=\"email\" id=\"email\" />\n        </div>\n        <div class=\"uni\">\n          <label for=\"senha-cad\">Senha *</label>\n          <input\n            type=\"password\"\n            id=\"senha-cad\"\n            minlength=\"6\"\n            maxlength=\"15\"\n            name=\"senha\"\n            [(ngModel)]=\"senha\"\n            (click)=\"esconde()\"\n          />\n        </div>\n        <div class=\"uni\">\n          <label for=\"conf-senha\">Confirme sua senha *</label>\n          <input\n            type=\"password\"\n            id=\"conf-senha\"\n            minlength=\"6\"\n            maxlength=\"15\"\n            name=\"confSenha\"\n            [(ngModel)]=\"confSenha\"\n          />\n        </div>\n        <div class=\"uni\">\n          <button id=\"voltar\" (click)=\"voltar()\">Já tenho uma conta</button>\n        </div>\n\n        <div *ngIf=\"senhaIgual\">\n          <p class=\"erro\">\n            {{ erro }}\n          </p>\n        </div>\n        <div *ngIf=\"senhaIgual\">\n          <p class=\"erro\">\n            {{ erroMenor }}\n          </p>\n        </div>\n\n        <div class=\"uni\">\n          <button class=\"btn-cadastro\" (click)=\"validaSenhaIgual()\">\n            Inscrever-se\n          </button>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n\n  <div class=\"home-img\">\n    <div class=\"flex\">\n      <img class=\"img\" src=\"../../assets/img/Mask Group.png\" />\n      <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.svg\" class=\"logo\" />\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-82518485079200912ad5007415d7ccb6eca9e089ac6923714e1932e7e848b4da9e1d2b806ec5f056434595aee8c251a221739c1ce9b770abdd52bc71b2e2103c",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "decrecente",
                    "defaultValue": "600",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "Contador",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "voltaLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Router } from '@angular/router';\nimport { Component, OnInit, AfterViewInit, AfterContentInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  decrecente: number = 600\n\n  constructor( private router: Router) { }\n\n  ngOnInit(): void {\n    this.Contador()\n  }\n\n  voltaLogin(): void{\n    this.router.navigate(['login'])\n  }\n\n  Contador(): void{\n    const teste = new Promise((resolve, reject) => {\n      if (this.decrecente > 0){\n        setTimeout(() => {\n          this.decrecente = this.decrecente - 1\n          this.Contador()\n        }, 1000);\n      }else{\n        this.router.navigate(['login'])\n      }\n    })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@font-face {\r\n  font-family: mark;\r\n  font-size: calc(62.5% * 2);\r\n  src: url(../../assets/font/MarkPro-Regular.ttf);\r\n}\r\n\r\nfooter {\r\n  background: linear-gradient(90.16deg, #33383D 0%, #1C1D20 100%);\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: -webkit-fill-available;\r\n  justify-content: right;\r\n  font-family: mark;\r\n  color: #FFFFFF;\r\n}\r\n\r\n.flex {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.graveto {\r\n  width: 61px;\r\n  height: 0px;\r\n  border: 1px solid #FFFFFF;\r\n  transform: rotate(90deg);\r\n  display: flex;\r\n  align-self: center;\r\n  margin-right: 5%;\r\n}\r\n\r\n.bloco-second {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flex-btn {\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 35.12vh;\r\n  margin-right: 2%\r\n}\r\n\r\n.link {\r\n  width: 50%;\r\n  height: 100%;\r\n}\r\n\r\n.link-center {\r\n  width: 54%;\r\n  text-align: center;\r\n}\r\n\r\n.refresh {\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: -webkit-right;\r\n}\r\n\r\n.texto {\r\n  font-size: max(0.99vw, 0.563rem);\r\n}\r\n\r\n.decrecente-p {\r\n  height: 65%;\r\n  display: flex;\r\n  align-items: end;\r\n  width: 100%;\r\n  text-align: center;\r\n  justify-content: center;\r\n  font-weight: 700;\r\n  font-size: 3rem;\r\n}\r\n\r\n.p-home-3 {\r\n  font-size: 0.875rem;\r\n}\r\n\r\na {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #FFFFFF;\r\n  text-align: center;\r\n  font-weight: 400;\r\n  font-size: 0.75rem;\r\n  background: none;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #FFFFFF;\r\n  text-align: center;\r\n  background: none;\r\n  border: none;\r\n  margin: 0%;\r\n  justify-content: center;\r\n  padding: 50%;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  font-size: 0.75rem;\r\n}\r\n\r\na:hover {\r\n  background: #FFFFFF;\r\n  color: #C13216;\r\n}\r\n\r\nbutton:hover {\r\n  background: #FFFFFF;\r\n  color: #C13216;\r\n}\r\n\r\n@media screen and (max-width: 912px) {\r\n  .texto {\r\n    padding-left: 5%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 540px) {\r\n  .graveto {\r\n    margin-right: 0%;\r\n  }\r\n\r\n  a {\r\n    font-size: 0.60rem;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 426px) {\r\n\r\n  footer {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .graveto {\r\n    display: none;\r\n  }\r\n\r\n  .flex {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .texto {\r\n    padding: 3%;\r\n    font-size: small;\r\n    text-align: -webkit-match-parent;\r\n  }\r\n\r\n  .refresh {\r\n    justify-content: center;\r\n    padding-bottom: 1%;\r\n  }\r\n\r\n  .decrecente-p {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .flex-btn {\r\n    flex-direction: row-reverse;\r\n    width: 100%;\r\n  }\r\n\r\n  .link-center {\r\n    width: 100%;\r\n  }\r\n\r\n  .link {\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n  }\r\n\r\n  a {\r\n    padding-top: 16.5%;\r\n    padding-bottom: 16.5%;\r\n    font-weight: 700;\r\n    font-size: 0.75rem;\r\n    justify-content: center;\r\n  }\r\n\r\n  button {\r\n    padding: 0%;\r\n    padding-top: 16.5%;\r\n    padding-bottom: 16.5%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<footer>\n  <div class=\"flex\">\n    <div class=\"link-center\">\n      <p class=\"refresh texto\">\n        Essa janela do navegador é usada para manter sua sessão de autenticação\n        ativa. Deixe-a aberta em segundo plano e abra uma nova janela para\n        continuar a navegar.\n      </p>\n    </div>\n\n    <div class=\"graveto\"></div>\n    <div class=\"flex\">\n      <div class=\"link-center\">\n        <p class=\"refresh\">Application refresh in</p>\n      </div>\n      <div class=\"link-center\">\n        <p class=\"decrecente-p\">{{ decrecente }}</p>\n        <div class=\"p-home-3\">\n          <p>seconds</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex-btn\">\n    <div class=\"link\">\n      <a href=\"https://www.google.com\">Continuar Navegando</a>\n    </div>\n    <div class=\"link\">\n      <button (click)=\"voltaLogin()\">Logout</button>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-7239fb46327066d889a025a4c3ec9e13070cf1c0857df832117c76beffaaa775b994d0260a54a4e018800d480eee932af1ee642499ee05845d3606782e99e29e-1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data1",
                    "defaultValue": "new Date('2022-04-23T10:00:00.000z')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "tempo",
                    "defaultValue": "{\n    weather:[ {\n      id: 0,\n      main: '',\n      weatherDescription: '',\n       icon: ''\n\n\n  }],\n    base: '',\n    main: {\n      temp: 0,\n      feelsLike:0,\n      tempMin: 0,\n      tempMax: 0,\n      pressure: 0,\n      humidity: 0\n\n\n  },\n    visibility: 0,\n    wind: undefined,\n    clouds: undefined,\n    dt: 0,\n    sys:{\n      type: 0,\n      id: 0,\n      country: '',\n      sunrise: 0,\n      sunset: 0,\n  },\n    timezone: 0,\n    id: 0,\n    name: '',\n    cod: 0,\n    hora: 0,\n\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tempo",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "Contador",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { weather } from './../interfaces/tempo';\nimport { Component, OnInit } from '@angular/core';\nimport { Tempo } from '../interfaces/tempo';\nimport { ClimaService } from '../services/clima.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  tempo: Tempo = {\n    weather:[ {\n      id: 0,\n      main: '',\n      weatherDescription: '',\n       icon: ''\n\n\n  }],\n    base: '',\n    main: {\n      temp: 0,\n      feelsLike:0,\n      tempMin: 0,\n      tempMax: 0,\n      pressure: 0,\n      humidity: 0\n\n\n  },\n    visibility: 0,\n    wind: undefined,\n    clouds: undefined,\n    dt: 0,\n    sys:{\n      type: 0,\n      id: 0,\n      country: '',\n      sunrise: 0,\n      sunset: 0,\n  },\n    timezone: 0,\n    id: 0,\n    name: '',\n    cod: 0,\n    hora: 0,\n\n  }\n\n  data1 = new Date('2022-04-23T10:00:00.000z');\n\n  constructor( private clima: ClimaService) { }\n\n  ngOnInit(): void {\n\n    this.Contador()\n\n    this.clima.getClima('', '').subscribe(\n      sucesso => {\n       /*  console.log(sucesso.weather[0].icon)\n        console.log(sucesso.main.temp)\n        console.log(sucesso.name) */\n        this.tempo.weather[0].icon = '../../assets/icons/' + sucesso.weather[0].icon + '.png'\n        this.tempo.main.temp = Math.round(sucesso.main.temp - 273.15)\n        this.tempo.name = sucesso.name\n        this.tempo.sys.country = sucesso.sys.country\n        /* console.log(sucesso.sys.country)\n        console.log( this.tempo.weather[0].icon ) */\n      },\n      erro => console.log(erro)\n    )\n\n  }\n\n  Contador(): void{\n    const teste = new Promise((resolve, reject) => {\n\n        setTimeout(() => {\n          const hora = new Date\n          this.tempo.hora = hora.getTime()\n          this.tempo.hora + 1000\n          this.Contador()\n\n        }, 1000);\n\n    })\n    /* console.log(this.tempo.hora) */\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@font-face {\r\n  font-family: mark;\r\n  src: url(../../assets/font/MarkPro-Regular.ttf);\r\n}\r\n\r\n\r\nheader {\r\n  color: #222222;\r\n  font-family: mark;\r\n  width: 100%;\r\n  height: -webkit-fill-available;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n}\r\n\r\n.flex {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flex-padding {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 3vh;\r\n\r\n\r\n}\r\n\r\n.padding1 {\r\n  padding-left: 5vh;\r\n}\r\n\r\n.padding2 {\r\n  padding-right: 5vh;\r\n}\r\n\r\n.compasss {\r\n  width: 20.1vh;\r\n  height: 5.73vh;\r\n}\r\n\r\n.relogio {\r\n  height: 19.571vh;\r\n  font-weight: 700;\r\n  font-size: min(16vw, 7.125rem);\r\n  line-height: 20vh;\r\n  text-align: center;\r\n}\r\n\r\n.font {\r\n  font-weight: 400;\r\n  font-size: 0.875rem;\r\n  line-height: 2.412vh;\r\n  text-align: center;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 5vh;\r\n  align-items: center;\r\n}\r\n\r\n.clima {\r\n  width: 4.55vh;\r\n  margin-right: 1.6vh;\r\n}\r\n\r\n.temperatura {\r\n  font-weight: 700;\r\n  font-size: 1.7rem;\r\n  line-height: 8.17vh;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 912px) {\r\n  .padding1 {\r\n    padding-left: 1%;\r\n\r\n  }\r\n\r\n  .padding2 {\r\n    padding-right: 1%;\r\n  }\r\n\r\n  .relogio {\r\n    height: 184px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 540px) {\r\n  .flex {\r\n    display: none;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "clima",
                        "type": "ClimaService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "clima",
                        "type": "ClimaService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header>\n  <div class=\"flex-padding padding1\">\n    <img class=\"compasss\" src=\"../../assets/img/LogoCompasso 1.svg\" />\n  </div>\n\n  <div class=\"flex\">\n    <div class=\"relogio\">\n      {{ this.tempo.hora | date: \"shortTime\":\"\":\"pt-BR\" }}\n    </div>\n    <div class=\"font\">\n      {{ this.tempo.hora | date: \"fullDate\" }}\n    </div>\n  </div>\n\n  <div class=\"flex-padding padding2\">\n    <h1 class=\"font\">{{ tempo.name }} - {{ tempo.sys.country }}</h1>\n    <div class=\"container\">\n      <img class=\"clima\" src=\"{{ tempo.weather[0].icon }}\" />\n      <h1 class=\"temperatura\">{{ tempo.main.temp }} °</h1>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-c64ce355194da3d2f9b6b66f47a6b3e21c3b7df9e7ef286fe030cea9b1e3aa4b5e2c8bfcbfb1f48514afb2234dd9da59f750b5d04d3d2fe57deb886f66119613",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@font-face {\r\n  font-family: mark;\r\n  src: url(../../assets/font/MarkPro-Regular.ttf);\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: -webkit-fill-available;\r\n  font-family: mark;\r\n  background-image: url(/../assets/img/bola-LogoCompasso\\ 1.svg);\r\n  background-repeat: no-repeat;\r\n  background-position: left;\r\n  background-size: 49vh;\r\n  background-position-y: 0px;\r\n}\r\n\r\n.texto {\r\n  padding-left: 33%;\r\n\r\n}\r\n\r\n.titulo-1 {\r\n  font-weight: 700;\r\n  font-size: 2.25rem;\r\n  line-height: 6.16vh;\r\n  text-align: right;\r\n  color: #C12D18;\r\n  margin-top: 3.6%;\r\n}\r\n\r\n.sub-titulo {\r\n  font-weight: 400;\r\n  font-size: 3.1.5rem;\r\n  line-height: 4vh;\r\n  text-align: right;\r\n  color: #222222;\r\n  margin-bottom: 0.4vh;\r\n}\r\n\r\n.titulo-2 {\r\n  font-weight: 700;\r\n  font-size: max(4.16vw, 2.5rem);\r\n  line-height: 10vh;\r\n  text-align: right;\r\n  color: #C12D18;\r\n}\r\n\r\n.final {\r\n  margin-bottom: 3.5vh;\r\n}\r\n\r\n@media screen and (max-width: 912px) {\r\n\r\n  .titulo-1 {\r\n    margin-top: 9.6%;\r\n  }\r\n\r\n  .sub-titulo {\r\n    font-size: x-large;\r\n  }\r\n\r\n  .final {\r\n    margin-bottom: 14.5vh;\r\n  }\r\n\r\n  main {\r\n    background-size: 56vh;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 820px) {\r\n\r\n  .titulo-1 {\r\n    margin-top: 16.6%;\r\n  }\r\n\r\n  .titulo-2 {\r\n    font-size: max(2.39vw, 2.3rem);\r\n  }\r\n\r\n  .final {\r\n    margin-bottom: 9.5vh;\r\n    font-size: 1.3rem;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 820px) {\r\n\r\n  .titulo-1 {\r\n    margin-top: 25.6%;\r\n  }\r\n\r\n  .titulo-2 {\r\n    font-size: max(2.39vw, 2.18rem);\r\n  }\r\n\r\n  .final {\r\n    margin-bottom: 6.5vh;\r\n  }\r\n\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\r\n  .titulo-1 {\r\n    margin-top: 17.6%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 540px) {\r\n\r\n  main {\r\n    background-size: 49vh;\r\n    background-position-y: 133px;\r\n  }\r\n\r\n  .texto {\r\n    padding-left: 17%;\r\n  }\r\n\r\n  .titulo-1 {\r\n    margin-top: 28.6%;\r\n    font-size: x-large;\r\n  }\r\n\r\n  .titulo-2 {\r\n    font-size: x-large;\r\n  }\r\n\r\n  .sub-titulo {\r\n    font-size: large;\r\n  }\r\n\r\n  .final {\r\n    margin-bottom: 8.5vh;\r\n  }\r\n}\r\n\r\n\r\n@media screen and (max-width: 426px) {\r\n\r\n  main {\r\n    background-size: 30vh;\r\n    background-position-y: 110%;\r\n  }\r\n\r\n  .texto {\r\n    padding-left: 0%;\r\n    padding-right: 6%;\r\n  }\r\n\r\n  .titulo-1 {\r\n    margin-top: 10.6%;\r\n  }\r\n\r\n  .final {\r\n    margin-bottom: 4.5vh;\r\n  }\r\n}\r\n",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-header></app-header>\n<main>\n  <div class=\"texto\">\n    <p class=\"titulo-1\">Our mission is</p>\n    <p class=\"sub-titulo\">Nossa missão é</p>\n    <p class=\"titulo-2\">to transform the world</p>\n    <p class=\"sub-titulo\">transformar o mundo</p>\n    <p class=\"titulo-2\">building digital experiences</p>\n    <p class=\"sub-titulo\">construindo experiências digitais</p>\n    <p class=\"titulo-2\">that enable our clients growth</p>\n    <p class=\"sub-titulo final\">\n      que permitam o crescimento dos nossos clientes\n    </p>\n  </div>\n</main>\n<app-footer></app-footer>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-907905b473e9e7df4519c15fe47b5b7320b18b46d2b6fd75741c9913678ee5e2e5ed29965cfc40cc8581a24cb3bb8ac79464238f65d895baad9f81a357db877b",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "defaultValue": "'Ops, usuário ou senha inválidos.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "error2",
                    "defaultValue": "' Tente novamente!'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "mostraErro",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "senha",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "user",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "cadastrar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "esconde",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "valida",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: string = ''\n  senha: string = ''\n  error: string = 'Ops, usuário ou senha inválidos.'\n  error2: string = ' Tente novamente!'\n  mostraErro: boolean = false\n\n  constructor( private router: Router ) {  }\n\n  ngOnInit(): void {\n  }\n\n  valida(): void{\n    if(this.user.trim() == 'jhony' && this.senha.trim() == '123'){\n      this.router.navigate(['home'])\n\n    }else{\n      this.user = ''\n      this.senha = ''\n      this.mostraErro = true\n    }\n\n  }\n\n  esconde():void{\n    this.mostraErro = false\n  }\n\n  cadastrar(): void{\n    this.router.navigate(['cadastro'])\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@font-face {\r\n  font-family: mark;\r\n  src: url(../../assets/font/MarkPro-Regular.ttf);\r\n}\r\n\r\n.home {\r\n\r\n  height: 100vh;\r\n  background: linear-gradient(180deg, #33383D 0%, #1C1D20 100%);\r\n  box-shadow: 0.54vh 0.54vh 9.4vh rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  color: #E0E0E0;\r\n}\r\n\r\n.login {\r\n  width: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.center {\r\n  display: flex;\r\n  height: 94%;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  font-family: mark;\r\n}\r\n\r\n.ola {\r\n  font-weight: 400;\r\n  font-size: 8.04vh;\r\n  line-height: 10.18vh;\r\n  margin-top: 9vh;\r\n}\r\n\r\n.ola-p {\r\n  padding-top: 1.27vh;\r\n  font-size: 2.14vh;\r\n  line-height: 2.68vh;\r\n}\r\n\r\n.ola-2 {\r\n  padding-top: 12vh;\r\n  font-size: 4vh;\r\n  line-height: 5.10vh;\r\n}\r\n\r\ninput {\r\n  font-family: mark;\r\n  margin-top: 2.42vh;\r\n  width: 50.8vh;\r\n  height: 8.05vh;\r\n  border-radius: 6.8vh;\r\n  border-color: #ffffff;\r\n  background: none;\r\n  color: #ffffff;\r\n  padding-left: 2.68vh;\r\n  font-size: 1rem;\r\n}\r\n\r\n.user:focus-within {\r\n  background-image: url(../../assets/img/Vector.svg);\r\n  background-repeat: no-repeat;\r\n  background-position: 47.58vh;\r\n\r\n}\r\n\r\n.senha:focus-within {\r\n  background-image: url(../../assets/img/icon-password.svg);\r\n  background-repeat: no-repeat;\r\n  background-position: 47.58vh;\r\n}\r\n\r\n.erro {\r\n  box-sizing: border-box;\r\n  font-size: 2.14vh;\r\n  line-height: 2.68vh;\r\n  text-align: center;\r\n  color: #E9B425;\r\n  margin-top: 3vh;\r\n\r\n}\r\n\r\n.btn-cadastro {\r\n  font-family: mark;\r\n  border: none;\r\n  background: none;\r\n  color: #E0E0E0;\r\n  cursor: pointer;\r\n  margin-top: 1vh;\r\n}\r\n\r\n.btn-cadastro:hover {\r\n  color: #E9B425;\r\n}\r\n\r\n.btn-continua {\r\n  font-family: mark;\r\n  width: 100%;\r\n  height: 8.98vh;\r\n  border-color: #ffffff;\r\n  filter: drop-shadow(5px 5px 15px rgba(0, 0, 0, 0.5));\r\n  background: linear-gradient(90deg, #FF2D04 0%, #C13216 100%);\r\n  box-shadow: inset 5px 5px 15px rgba(0, 0, 0, 0.15);\r\n  border-radius: 6.7vh;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  border-color: #FF2D04;\r\n  margin-top: 8vh;\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.home-img {\r\n  width: 50%;\r\n  display: flex;\r\n}\r\n\r\n\r\n.flex {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n}\r\n\r\n.img {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.logo {\r\n  width: 41vh;\r\n  height: 9.2vh;\r\n  position: absolute;\r\n  margin-top: 1.7vh;\r\n}\r\n\r\n\r\n@media screen and (max-width: 912px) {\r\n  .ola {\r\n    font-size: 6.75rem;\r\n  }\r\n\r\n  .ola-p {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .ola-2 {\r\n    font-size: 1.875rem;\r\n  }\r\n\r\n  input {\r\n    width: 24.8vh;\r\n    height: 6.05vh;\r\n  }\r\n\r\n  .erro {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .btn-continua {\r\n    height: 6.98vh;\r\n  }\r\n\r\n  .logo {\r\n    width: 24vh;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .ola {\r\n    font-size: 3.75rem;\r\n  }\r\n\r\n  input {\r\n    width: 92%;\r\n  }\r\n\r\n  .logo {\r\n    width: 33vh;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 540px) {\r\n  .center {\r\n    width: 76%;\r\n  }\r\n\r\n  .ola {\r\n    font-size: 4.75rem;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 426px) {\r\n  #homee-img {\r\n    display: none;\r\n  }\r\n\r\n  .home {\r\n    width: 100%;\r\n    justify-content: center;\r\n  }\r\n\r\n  .center {\r\n    background-image: url(/../assets/img/Logo-Compasso-Branco-hor\\ 1.svg);\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n  }\r\n\r\n  .login {\r\n    width: 100%;\r\n  }\r\n\r\n  input {\r\n    width: 89%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\n  <div class=\"login\">\n    <div class=\"center\">\n      <div class=\"texto\">\n        <h1 class=\"ola\">Olá,</h1>\n        <p class=\"ola-p\">\n          Para continuar navegando de forma <br />\n          segura, efetue o login na rede.\n        </p>\n        <h1 class=\"ola-2\">Login</h1>\n      </div>\n      <fieldset>\n        <div class=\"login-user\">\n          <input\n            class=\"user\"\n            type=\"text\"\n            placeholder=\"Usuário\"\n            [(ngModel)]=\"user\"\n            (click)=\"esconde()\"\n          />\n        </div>\n\n        <div>\n          <input\n            class=\"senha\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            [(ngModel)]=\"senha\"\n          />\n        </div>\n        <div class=\"cadastro\">\n          <button type=\"submit\" (click)=\"cadastrar()\" class=\"btn-cadastro\">\n            Cadastrar-se\n          </button>\n        </div>\n        <div *ngIf=\"mostraErro\">\n          <p class=\"erro\">\n            {{ error }} <br />\n            {{ error2 }}\n          </p>\n        </div>\n\n        <div class=\"continuar\">\n          <button class=\"btn-continua\" type=\"submit\" (click)=\"valida()\">\n            Continuar\n          </button>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n\n  <div class=\"home-img\" id=\"homee-img\">\n    <div class=\"flex\">\n      <img class=\"img\" src=\"../../assets/img/Mask Group.png\" />\n      <img src=\"../../assets/img/Logo-Compasso-Branco-hor 1.svg\" class=\"logo\" />\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-643f64c033280803aa1c42bca3f41d1de3feddffa38a4274b601ec70373c56e50e1b53ab28fb1b0633b78614c7ae881f0de745eadd99ad1551cee979f9a5b8d1",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-618d93917913af9ef8298c9da49c01b1190adc6173df4c72d7db5f7dd1d1498f3e063352750d852a576bf65393ee5351dafb5aeee479976148518c6c62e6efde",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport locale from '@angular/common/locales/pt';\nimport { CadastroComponent } from './cadastro/cadastro.component'\nimport { environment } from 'src/environments/environment';\n\nregisterLocaleData(locale);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    CadastroComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    /* AngularFireModule.initializeApp(environment.firebase) */\n  ],\n  exports: [\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  providers: [\n    {provide: LOCALE_ID, useValue: 'pt-br'},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CadastroComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-65b49a50fc66b7ee0dc69f634566afcaafa916d05c0423fb9cc52dc789f553507ec7c37f5ae9589f50aa1be5cd13a1bafb8892679b257bf6b180cf82a5717a34",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CadastroComponent } from './cadastro/cadastro.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '', component: LoginComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'cadastro', component: CadastroComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBBhlBDMp_Wnj3yEAkkRNsNt4tcj9cu3Xo\",\n\n  }\n\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBBhlBDMp_Wnj3yEAkkRNsNt4tcj9cu3Xo\",\n\n  }\n\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "cadastro",
                        "component": "CadastroComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/cadastro/cadastro.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CadastroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "clouds",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "main",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "sys",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tempo",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "weather",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/tempo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "wind",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/services/clima.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ClimaService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}